{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwdar\\\\Desktop\\\\React-Firebase-lesson-58\\\\magic-memory\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/Card/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImg = [{\n  'src': './img/helmet-1.png',\n  'flag': false\n}, {\n  'src': './img/potion-1.png',\n  'flag': false\n}, {\n  'src': './img/ring-1.png',\n  'flag': false\n}, {\n  'src': './img/scroll-1.png',\n  'flag': false\n}, {\n  'src': './img/shield-1.png',\n  'flag': false\n}, {\n  'src': './img/sword-1.png',\n  'flag': false\n}];\n\nfunction App() {\n  _s();\n\n  const shuffleCards = () => {\n    let shuffledCards = [...cardImg, ...cardImg];\n    shuffledCards = shuffledCards.sort(() => Math.random() - 0.5).map(item => {\n      return { ...item,\n        'id': Math.random()\n      };\n    });\n    setCards(shuffledCards);\n    setCount(0);\n  };\n\n  const [cards, setCards] = useState([]);\n  const [count, setCount] = useState(0);\n  const [choiseCard1, setChoiseCard1] = useState(null);\n  const [choiseCard2, setChoiseCard2] = useState(null);\n\n  const setChoiceCard = card => {\n    if (choiseCard1) {\n      setChoiseCard2(card);\n    } else {\n      setChoiseCard1(card);\n    }\n  };\n\n  useEffect(() => {\n    if (choiseCard1 && choiseCard2) {\n      if (choiseCard1.src === choiseCard2.src) {\n        setCards(prevState => {\n          return prevState.map(card => {\n            if (choiseCard1.src === card.src) {\n              return { ...card,\n                flag: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        console.log('-');\n        setTimeout(resetTurn, 600);\n      }\n    }\n  }, [choiseCard1, choiseCard2]);\n\n  const resetTurn = () => {\n    setChoiseCard1(null);\n    setChoiseCard2(null);\n    setCount(prevCount => prevCount + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        setChoiceCard: setChoiceCard,\n        flipped: card === choiseCard1 || card === choiseCard2 || card.flag\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+w0LH/37QOK0qKeyUvRbbM8HEcw=\");\n\n_c = App;\nexport default App; //_rfc\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/wwdar/Desktop/React-Firebase-lesson-58/magic-memory/src/App.js"],"names":["React","useEffect","useState","SingleCard","cardImg","App","shuffleCards","shuffledCards","sort","Math","random","map","item","setCards","setCount","cards","count","choiseCard1","setChoiseCard1","choiseCard2","setChoiseCard2","setChoiceCard","card","src","prevState","flag","resetTurn","console","log","setTimeout","prevCount","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/Card/SingleCard';\n\nconst cardImg = [\n  {'src': './img/helmet-1.png', 'flag': false},\n  {'src': './img/potion-1.png', 'flag': false},\n  {'src': './img/ring-1.png', 'flag': false},\n  {'src': './img/scroll-1.png', 'flag': false},\n  {'src': './img/shield-1.png', 'flag': false},\n  {'src': './img/sword-1.png', 'flag': false},\n];\n\nfunction App() {\n  const shuffleCards = () => {\n      let shuffledCards = [...cardImg, ...cardImg];\n      shuffledCards = shuffledCards.sort(() => Math.random() - 0.5)\n      .map((item => {\n        return {...item, \n                'id': Math.random()\n              }\n      }))\n      setCards(shuffledCards);\n      setCount(0)\n    };\n\n  const [cards, setCards] = useState([]);\n  const [count, setCount] = useState(0);\n  const [choiseCard1, setChoiseCard1] = useState(null);\n  const [choiseCard2, setChoiseCard2] = useState(null);\n\n\n  const setChoiceCard = (card) => {\n    if (choiseCard1) {\n      setChoiseCard2(card)\n    } else {\n      setChoiseCard1(card)\n    }\n  };\n\n  useEffect(() => {\n    if (choiseCard1 && choiseCard2) {\n      if (choiseCard1.src === choiseCard2.src) {\n        setCards(prevState => {\n          return prevState.map(card => {\n            if (choiseCard1.src === card.src) {\n              return {...card, flag: true}\n            } else {\n              return card;\n            }\n          })\n        })\n        resetTurn();\n      } else {\n        console.log('-');\n        setTimeout(resetTurn, 600);\n      }\n    }\n  }, [choiseCard1, choiseCard2]);\n\n  const resetTurn = () => {\n    setChoiseCard1(null);\n    setChoiseCard2(null);\n    setCount(prevCount => prevCount + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={shuffleCards}>New Game</button>\n      <div className='card-grid'>\n        {cards.map(card => (\n          <SingleCard \n          card={card} \n          key={card.id} \n          setChoiceCard={setChoiceCard} \n          flipped = {card === choiseCard1 || card === choiseCard2 || card.flag}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App\n\n//_rfc"]},"metadata":{},"sourceType":"module"}